RBX = "../bin/rbx"
LOG = "test.log"
RESULT_FILE = ".run_result"

TESTS = [

         {:file => "loop.rb", :comment => "", :iters => 1000000},

         {:file => "sqrt.rb", :comment => "(digs into stdlib)", :iters => 10000},

         {:file => "sqrt_int.rb", :comment => "(setup_unwind,pop_unwind, nothing thrown)", :iters => 10000}, 

         {:file => "nest_simple.rb", :comment => "", :iters => 10000},

#         {:file => "nest_funcs.rb", :comment => "", :iters => 10000},

         {:file => "nest_funcs_with_yield.rb", :comment => "", :iters => 10000},

         {:file => "if_exit.rb", :comment => "", :iters => 1000000},

         {:file => "if_exit_in_func.rb", :comment => "", :iters => 1000000},

         {:file => "if_exit_in_two_funcs.rb", :comment => "", :iters => 10000},

         {:file => "if_exit_in_deep_nesting1.rb", :comment => "", :iters => 100000},

         {:file => "if_exit_with_yield_simple.rb", :comment => "", :iters => 10000},

         {:file => "if_exit_with_yield.rb", :comment => "", :iters => 100000},

#         {:file => "nest_funcs_and_exit.rb", :comment => "", :iters => 100},

#         {:file => "nest_funcs_with_optional_args.rb", :comment => "", :iters => 10000},

         {:file => "loop_with_hash.rb", :comment => "", :iters => 10000},

         {:file => "loop_with_puts.rb", :comment => "", :iters => 1000}

         #         {:file => "loop_with_div_by_zero.rb", :comment => "", :iters => 1000}

        ]


task :units => [] do
  TESTS.each{|t|
    puts ""
    puts "#{t[:file]} #{t[:comment]}"
    puts "-------------------"

    time = Time.now.to_f
    sh "#{RBX} #{t[:file]} #{t[:iters]} interp >> #{LOG}"
    elapsed = Time.now.to_f - time
    puts "   Interp time: #{elapsed} seconds."
    interp_result = File.read(RESULT_FILE)

    time = Time.now.to_f
    sh "#{RBX} #{t[:file]} #{t[:iters]} trace >> #{LOG}"
    elapsed = Time.now.to_f - time
    puts "   Trace time: #{elapsed} seconds."
    trace_result = File.read(RESULT_FILE)

    if interp_result != trace_result
      puts "FAILURE: Interpreter result: #{interp_result}, Trace result: #{trace_result}"
    else
      puts "SUCCESS"
    end

  }
end


task :trace_graphs => [] do
  graphs = FileList["trace_*.png"] + FileList["trace_*.gv"]
  rm_rf graphs
  TESTS.each{|t|
    puts ""
    puts "#{t[:file]} #{t[:comment]}"
    puts "-------------------"
    sh "#{RBX} #{t[:file]} #{t[:iters]} #{TRACE_ENABLED ? "true" : ""} >> #{LOG}"

    graphs = FileList["trace_*.gv"]
    graphs.each{ |gv|
      sh "dot #{gv} -Tpng -otrace_graphs/#{t[:file]}_#{gv}.png"
    }
    rm graphs
  }
end


task :default => [:units]

